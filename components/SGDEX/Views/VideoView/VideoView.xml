<?xml version="1.0" encoding="UTF-8"?>
<!-- Copyright (c) 2018 Roku, Inc. All rights reserved. -->

<!--
    @Public
    Video View is a component that provide pre-defined approach to play Video
    It incapsulates different features:
        - Playback of video playlist or one item;
        - Loading of content via HandlerConfigVideo before playback;
        - Showing Endcards View after video playback ends;
        - Loading of endcard content via HandlerConfigEndcard some time before video ends to provide smooth user experience;
        - Handling of Raf - handlerConfigRAF should be set in content node;
        - Video.state field is aliased to make tracking of states easier;
        - Themes support

    @Sample:
    video = CreateObject("roSGNode", "VideoView")

    video.content = content
    video.jumpToItem = index
    video.control = "play"

    m.top.ComponentController.callFunc("show", {
        view: video
    })

    ' developer can observe video.endcardItemSelected to handle endcard selection
    ' video.currentIndex or video.currentItem fields can be used to track what was the last video after video closed.
-->

<component name="VideoView" extends="SGDEXComponent" xsi:noNamespaceSchemaLocation="https://devtools.web.roku.com/schema/RokuSceneGraph.xsd">
    <interface>
        <!-- @Public -->
        <!-- Endcard countdown time. How much endcard is shown until next video start  -->
        <field id="endcardCountdownTime" type="integer" value="10" alwaysNotify="true" />

        <!-- @Public -->
        <!-- Time to end when endcard content start load  -->
        <field id="endcardLoadTime" type="integer" value="10" alwaysNotify="true" />

        <!-- @Public -->
        <!-- Config to know should Video View show endcards with default next item and Repeat button
        even if there is no content getter specified by developer  -->
        <field id="alwaysShowEndcards" type="bool" value="false" />

        <!-- @Public -->
        <!-- To make library know is it playlist or individual item  -->
        <field id="isContentList" type="bool" value="true" />

        <!-- @Public -->
        <!--
          Jumps to item in playlist
          This field must be set after setting the content field.
        -->
        <field id="jumpToItem" type="integer" alwaysNotify="true" />

        <!-- @Public -->
        <!-- Control "play" and "prebuffer" makes library start to load content from Content Getter
        if any other control - set it directly to video node  -->
        <field id="control" type="string" alwaysNotify="true" />

        <!-- @Public -->
        <!-- Trigger to notify channel that endcard loading is started  -->
        <field id="endcardTrigger" type="boolean" alwaysNotify="true" />

        <!-- @Public -->
        <!-- Trigger to notify that next Video item in playlist should be preloaded while Endcard view is shown  -->
        <field id="preloadContent" type="boolean" value="false" alwaysNotify="true" />

        <!-- @Public -->
        <!-- Field to know what is index of current item - index of child in content Content Node  -->
        <field id="currentIndex" type="integer" value="-1" alwaysNotify="true" />

        <!-- @Public -->
        <!-- Video Node state  -->
        <field id="state" type="string" />

        <!-- @Public -->
        <!-- Playback position in seconds  -->
        <field id="position" type="int" />

        <!-- @Public -->
        <!-- Playback duration in seconds  -->
        <field id="duration" type="int" />

        <!-- @Public -->
        <!-- @ReadOnly Content node of item that is currently played. -->
        <!-- If change this field manually, unexpected behaviour can occur.  -->
        <field id="currentItem" type="node" alwaysNotify="true" />


        <field id="endcardItemSelected" type="node" alwaysNotify="true" />


        <field id="disableScreenSaver" type="boolean" value="false" />

 
        <field id="handlerConfigRAF" type="assocarray" />
    </interface>

    <script type="text/brightscript" uri="VideoView.brs" />
    <script type="text/brightscript" uri="../../ContentManager/ContentManagerUtils.brs" />
    <script type="text/brightscript" uri="../utils/utils.brs" />

    <children>
        <Rectangle
            width="1280"
            height="720"
            translation="[0,0]"
            color="0x000000FF"
        />
    </children>
</component>
